/*
 *  BSD 2-Clause License
 *  * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 *  * All rights reserved.
 *  *
 *  * Redistribution and use in source and binary forms, with or without
 *  * modification, are permitted provided that the following conditions are met:
 *  *
 *  * 1. Redistributions of source code must retain the above copyright notice, this
 *  *    list of conditions and the following disclaimer.
 *  * 2. Redistributions in binary form must reproduce the above copyright notice,
 *  *    this list of conditions and the following disclaimer in the documentation
 *  *    and/or other materials provided with the distribution.
 *  *
 *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 *  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
package com.erishiongamesllc.byrelease.data;

import lombok.Getter;
import lombok.Setter;
import net.runelite.api.Quest;

public enum ByReleaseQuest {
	COOKS_ASSISTANT(Quest.COOKS_ASSISTANT, 20010104, false),
	DEMON_SLAYER(Quest.DEMON_SLAYER, 20010104, false),
	THE_RESTLESS_GHOST(Quest.THE_RESTLESS_GHOST, 20010104, false),
	ROMEO__JULIET(Quest.ROMEO__JULIET, 20010104, false),
	SHEEP_SHEARER(Quest.SHEEP_SHEARER, 20010104, false),
	SHIELD_OF_ARRAV(Quest.SHIELD_OF_ARRAV, 20010104, false),
	ERNEST_THE_CHICKEN(Quest.ERNEST_THE_CHICKEN, 20010121, false),
	VAMPYRE_SLAYER(Quest.VAMPYRE_SLAYER, 20010128, false),
	IMP_CATCHER(Quest.IMP_CATCHER, 20010216, false),
	PRINCE_ALI_RESCUE(Quest.PRINCE_ALI_RESCUE, 20010228, false),
	DORICS_QUEST(Quest.DORICS_QUEST, 20010406, false),
	BLACK_KNIGHTS_FORTRESS(Quest.BLACK_KNIGHTS_FORTRESS, 20010406, false),
	WITCHS_POTION(Quest.WITCHS_POTION, 20010406, false),
	THE_KNIGHTS_SWORD(Quest.THE_KNIGHTS_SWORD, 20010406, false),
	GOBLIN_DIPLOMACY(Quest.GOBLIN_DIPLOMACY, 20010508, false),
	PIRATES_TREASURE(Quest.PIRATES_TREASURE, 20010611, false),
	DRAGON_SLAYER_I(Quest.DRAGON_SLAYER_I, 20010923, false),
	DRUIDIC_RITUAL(Quest.DRUIDIC_RITUAL, 20020227, false),
	LOST_CITY(Quest.LOST_CITY, 20020227, false),
	WITCHS_HOUSE(Quest.WITCHS_HOUSE, 20020227, false),
	MERLINS_CRYSTAL(Quest.MERLINS_CRYSTAL, 20020227, false),
	HEROES_QUEST(Quest.HEROES_QUEST, 20020227, false),
	ALFRED_GRIMHANDS_BARCRAWL(Quest.ALFRED_GRIMHANDS_BARCRAWL, 20020325, false),
	SCORPION_CATCHER(Quest.SCORPION_CATCHER, 20020325, false),
	FAMILY_CREST(Quest.FAMILY_CREST, 20020409, false),
	TRIBAL_TOTEM(Quest.TRIBAL_TOTEM, 20020430, false),
	FISHING_CONTEST(Quest.FISHING_CONTEST, 20020528, false),
	MONKS_FRIEND(Quest.MONKS_FRIEND, 20020528, false),
	TEMPLE_OF_IKOV(Quest.TEMPLE_OF_IKOV, 20020617, false),
	CLOCK_TOWER(Quest.CLOCK_TOWER, 20020617, false),
	HOLY_GRAIL(Quest.HOLY_GRAIL, 20020723, false),
	TREE_GNOME_VILLAGE(Quest.TREE_GNOME_VILLAGE, 20020723, false),
	FIGHT_ARENA(Quest.FIGHT_ARENA, 20020723, false),
	HAZEEL_CULT(Quest.HAZEEL_CULT, 20020815, false),
	SHEEP_HERDER(Quest.SHEEP_HERDER, 20020815, false),
	PLAGUE_CITY(Quest.PLAGUE_CITY, 20020827, false),
	SEA_SLUG(Quest.SEA_SLUG, 20020909, false),
	WATERFALL_QUEST(Quest.WATERFALL_QUEST, 20020924, false),
	BIOHAZARD(Quest.BIOHAZARD, 20021023, false),
	JUNGLE_POTION(Quest.JUNGLE_POTION, 20021023, false),
	THE_GRAND_TREE(Quest.THE_GRAND_TREE, 20021212, false),
	SHILO_VILLAGE(Quest.SHILO_VILLAGE, 20030127, false),
	UNDERGROUND_PASS(Quest.UNDERGROUND_PASS, 20030303, false),
	OBSERVATORY_QUEST(Quest.OBSERVATORY_QUEST, 20030317, false),
	THE_TOURIST_TRAP(Quest.THE_TOURIST_TRAP, 20030414, false),
	WATCHTOWER(Quest.WATCHTOWER, 20030507, false),
	DWARF_CANNON(Quest.DWARF_CANNON, 20030527, false),
	MURDER_MYSTERY(Quest.MURDER_MYSTERY, 20030609, false),
	THE_DIG_SITE(Quest.THE_DIG_SITE, 20030709, false),
	GERTRUDES_CAT(Quest.GERTRUDES_CAT, 20030728, false),
	LEGENDS_QUEST(Quest.LEGENDS_QUEST, 20030820, false),
	MAGE_ARENA_I(Quest.MAGE_ARENA_I, 20030922, false),
	RUNE_MYSTERIES(Quest.RUNE_MYSTERIES, 20031201, false),
	BIG_CHOMPY_BIRD_HUNTING(Quest.BIG_CHOMPY_BIRD_HUNTING, 20040518, false),
	ELEMENTAL_WORKSHOP_I(Quest.ELEMENTAL_WORKSHOP_I, 20040602, false),
	PRIEST_IN_PERIL(Quest.PRIEST_IN_PERIL, 20040629, false),
	NATURE_SPIRIT(Quest.NATURE_SPIRIT, 20040713, false),
	DEATH_PLATEAU(Quest.DEATH_PLATEAU, 20040809, false),
	TROLL_STRONGHOLD(Quest.TROLL_STRONGHOLD, 20040824, false),
	TAI_BWO_WANNAI_TRIO(Quest.TAI_BWO_WANNAI_TRIO, 20040914, false),
	REGICIDE(Quest.REGICIDE, 20040920, false),
	EADGARS_RUSE(Quest.EADGARS_RUSE, 20041005, false),
	SHADES_OF_MORTTON(Quest.SHADES_OF_MORTTON, 20041018, false),
	THE_FREMENNIK_TRIALS(Quest.THE_FREMENNIK_TRIALS, 20041102, false),
	HORROR_FROM_THE_DEEP(Quest.HORROR_FROM_THE_DEEP, 20041117, false),
	THRONE_OF_MISCELLANIA(Quest.THRONE_OF_MISCELLANIA, 20041129, false),
	MONKEY_MADNESS_I(Quest.MONKEY_MADNESS_I, 20041206, false),
	HAUNTED_MINE(Quest.HAUNTED_MINE, 20041221, false),
	TROLL_ROMANCE(Quest.TROLL_ROMANCE, 20050105, false),
	IN_SEARCH_OF_THE_MYREQUE(Quest.IN_SEARCH_OF_THE_MYREQUE, 20050110, false),
	CREATURE_OF_FENKENSTRAIN(Quest.CREATURE_OF_FENKENSTRAIN, 20050131, false),
	ROVING_ELVES(Quest.ROVING_ELVES, 20050207, false),
	GHOSTS_AHOY(Quest.GHOSTS_AHOY, 20050215, false),
	ONE_SMALL_FAVOUR(Quest.ONE_SMALL_FAVOUR, 20050228, false),
	MOUNTAIN_DAUGHTER(Quest.MOUNTAIN_DAUGHTER, 20050307, false),
	BETWEEN_A_ROCK(Quest.BETWEEN_A_ROCK, 20050321, false),
	THE_FEUD(Quest.THE_FEUD, 20050404, false),
	THE_GOLEM(Quest.THE_GOLEM, 20050411, false),
	DESERT_TREASURE_I(Quest.DESERT_TREASURE_I, 20050418, false),
	ICTHLARINS_LITTLE_HELPER(Quest.ICTHLARINS_LITTLE_HELPER, 20050426, false),
	TEARS_OF_GUTHIX(Quest.TEARS_OF_GUTHIX, 20050504, false),
	ZOGRE_FLESH_EATERS(Quest.ZOGRE_FLESH_EATERS, 20050517, false),
	THE_LOST_TRIBE(Quest.THE_LOST_TRIBE, 20050531, false),
	THE_GIANT_DWARF(Quest.THE_GIANT_DWARF, 20050531, false),
	ENTER_THE_ABYSS(Quest.ENTER_THE_ABYSS, 20050613, false),
	RECRUITMENT_DRIVE(Quest.RECRUITMENT_DRIVE, 20050627, false),
	MOURNINGS_END_PART_I(Quest.MOURNINGS_END_PART_I, 20050719, false),
	CURSE_OF_THE_EMPTY_LORD(Quest.CURSE_OF_THE_EMPTY_LORD, 20050726, false),
	FORGETTABLE_TALE(Quest.FORGETTABLE_TALE, 20050726, false),
	GARDEN_OF_TRANQUILLITY(Quest.GARDEN_OF_TRANQUILLITY, 20050830, false),
	A_TAIL_OF_TWO_CATS(Quest.A_TAIL_OF_TWO_CATS, 20050926, false),
	WANTED(Quest.WANTED, 20051017, false),
	MOURNINGS_END_PART_II(Quest.MOURNINGS_END_PART_II, 20051017, false),
	SKIPPY_AND_THE_MOGRES(Quest.SKIPPY_AND_THE_MOGRES, 20051024, false),
	RUM_DEAL(Quest.RUM_DEAL, 20051031, false),
	SHADOW_OF_THE_STORM(Quest.SHADOW_OF_THE_STORM, 20051114, false),
	THE_ENCHANTED_KEY(Quest.THE_ENCHANTED_KEY, 20051122, false),
	MAKING_HISTORY(Quest.MAKING_HISTORY, 20051122, false),
	RATCATCHERS(Quest.RATCATCHERS, 20051128, false),
	SPIRITS_OF_THE_ELID(Quest.SPIRITS_OF_THE_ELID, 20051205, false),
	DEVIOUS_MINDS(Quest.DEVIOUS_MINDS, 20051219, false),
	THE_HAND_IN_THE_SAND(Quest.THE_HAND_IN_THE_SAND, 20060110, false),
	ENAKHRAS_LAMENT(Quest.ENAKHRAS_LAMENT, 20060123, false),
	CABIN_FEVER(Quest.CABIN_FEVER, 20060207, false),
	FAIRYTALE_I__GROWING_PAINS(Quest.FAIRYTALE_I__GROWING_PAINS, 20060227, false),
	RECIPE_FOR_DISASTER(Quest.RECIPE_FOR_DISASTER, 20060315, false),
	IN_AID_OF_THE_MYREQUE(Quest.IN_AID_OF_THE_MYREQUE, 20060322, false),
	A_SOULS_BANE(Quest.A_SOULS_BANE, 20060403, false),
	RAG_AND_BONE_MAN_I(Quest.RAG_AND_BONE_MAN_I, 20060410, false),
	RAG_AND_BONE_MAN_II(Quest.RAG_AND_BONE_MAN_II, 20060410, false),
	SWAN_SONG(Quest.SWAN_SONG, 20060502, false),
	ROYAL_TROUBLE(Quest.ROYAL_TROUBLE, 20060522, false),
	DEATH_TO_THE_DORGESHUUN(Quest.DEATH_TO_THE_DORGESHUUN, 20060612, false),
	FAIRYTALE_II__CURE_A_QUEEN(Quest.FAIRYTALE_II__CURE_A_QUEEN, 20060711, false),
	LUNAR_DIPLOMACY(Quest.LUNAR_DIPLOMACY, 20060724, false),
	THE_EYES_OF_GLOUPHRIE(Quest.THE_EYES_OF_GLOUPHRIE, 20060815, false),
	DARKNESS_OF_HALLOWVALE(Quest.DARKNESS_OF_HALLOWVALE, 20060904, false),
	THE_SLUG_MENACE(Quest.THE_SLUG_MENACE, 20060920, false),
	ELEMENTAL_WORKSHOP_II(Quest.ELEMENTAL_WORKSHOP_II, 20061002, false),
	MY_ARMS_BIG_ADVENTURE(Quest.MY_ARMS_BIG_ADVENTURE, 20061023, false),
	ENLIGHTENED_JOURNEY(Quest.ENLIGHTENED_JOURNEY, 20061106, false),
	EAGLES_PEAK(Quest.EAGLES_PEAK, 20061128, false),
	ANIMAL_MAGNETISM(Quest.ANIMAL_MAGNETISM, 20061212, false),
	CONTACT(Quest.CONTACT, 20070110, false),
	LAIR_OF_TARN_RAZORLOR(Quest.LAIR_OF_TARN_RAZORLOR, 20070122, false),
	COLD_WAR(Quest.COLD_WAR, 20070129, false),
	THE_FREMENNIK_ISLES(Quest.THE_FREMENNIK_ISLES, 20070206, false),
	THE_GENERALS_SHADOW(Quest.THE_GENERALS_SHADOW, 20070212, false),
	TOWER_OF_LIFE(Quest.TOWER_OF_LIFE, 20070219, false),
	THE_GREAT_BRAIN_ROBBERY(Quest.THE_GREAT_BRAIN_ROBBERY, 20070306, false),
	WHAT_LIES_BELOW(Quest.WHAT_LIES_BELOW, 20070327, false),
	OLAFS_QUEST(Quest.OLAFS_QUEST, 20070410, false),
	ANOTHER_SLICE_OF_HAM(Quest.ANOTHER_SLICE_OF_HAM, 20070424, false),
	DREAM_MENTOR(Quest.DREAM_MENTOR, 20070515, false),
	GRIM_TALES(Quest.GRIM_TALES, 20070604, false),
	KINGS_RANSOM(Quest.KINGS_RANSOM, 20070724, false),
	ARCHITECTURAL_ALLIANCE(Quest.ARCHITECTURAL_ALLIANCE, 20160303, false),
	MONKEY_MADNESS_II(Quest.MONKEY_MADNESS_II, 20160506, false),
	BEAR_YOUR_SOUL(Quest.BEAR_YOUR_SOUL, 20160519, false),
	FAMILY_PEST(Quest.FAMILY_PEST, 20160901, false),
	MISTHALIN_MYSTERY(Quest.MISTHALIN_MYSTERY, 20170126, false),
	CLIENT_OF_KOUREND(Quest.CLIENT_OF_KOUREND, 20170420, false),
	BONE_VOYAGE(Quest.BONE_VOYAGE, 20170907, false),
	THE_QUEEN_OF_THIEVES(Quest.THE_QUEEN_OF_THIEVES, 20171109, false),
	THE_DEPTHS_OF_DESPAIR(Quest.THE_DEPTHS_OF_DESPAIR, 20171109, false),
	MAGE_ARENA_II(Quest.MAGE_ARENA_II, 20171123, false),
	THE_CORSAIR_CURSE(Quest.THE_CORSAIR_CURSE, 20171207, false),
	DRAGON_SLAYER_II(Quest.DRAGON_SLAYER_II, 20180104, false),
	TALE_OF_THE_RIGHTEOUS(Quest.TALE_OF_THE_RIGHTEOUS, 20180419, false),
	A_TASTE_OF_HOPE(Quest.A_TASTE_OF_HOPE, 20180524, false),
	MAKING_FRIENDS_WITH_MY_ARM(Quest.MAKING_FRIENDS_WITH_MY_ARM, 20180906, false),
	THE_FORSAKEN_TOWER(Quest.THE_FORSAKEN_TOWER, 20190110, false),
	THE_ASCENT_OF_ARCEUUS(Quest.THE_ASCENT_OF_ARCEUUS, 20190110, false),
	X_MARKS_THE_SPOT(Quest.X_MARKS_THE_SPOT, 20190207, false),
	IN_SEARCH_OF_KNOWLEDGE(Quest.IN_SEARCH_OF_KNOWLEDGE, 20190704, false),
	SONG_OF_THE_ELVES(Quest.SONG_OF_THE_ELVES, 20190725, false),
	THE_FREMENNIK_EXILES(Quest.THE_FREMENNIK_EXILES, 20190926, false),
	SINS_OF_THE_FATHER(Quest.SINS_OF_THE_FATHER, 20200604, false),
	DADDYS_HOME(Quest.DADDYS_HOME, 20200826, false),
	A_PORCINE_OF_INTEREST(Quest.A_PORCINE_OF_INTEREST, 20200910, false),
	GETTING_AHEAD(Quest.GETTING_AHEAD, 20201125, false),
	BELOW_ICE_MOUNTAIN(Quest.BELOW_ICE_MOUNTAIN, 20210414, false),
	A_NIGHT_AT_THE_THEATRE(Quest.A_NIGHT_AT_THE_THEATRE, 20210603, false),
	A_KINGDOM_DIVIDED(Quest.A_KINGDOM_DIVIDED, 20210616, false),
	THE_FROZEN_DOOR(Quest.THE_FROZEN_DOOR, 20211216, false),
	HOPESPEARS_WILL(Quest.HOPESPEARS_WILL, 20220209, false),
	LAND_OF_THE_GOBLINS(Quest.LAND_OF_THE_GOBLINS, 20220209, false),
	TEMPLE_OF_THE_EYE(Quest.TEMPLE_OF_THE_EYE, 20220323, false),
	BENEATH_CURSED_SANDS(Quest.BENEATH_CURSED_SANDS, 20220427, false),
	SLEEPING_GIANTS(Quest.SLEEPING_GIANTS, 20220608, false),
	INTO_THE_TOMBS(Quest.INTO_THE_TOMBS, 20220824, false),
	THE_GARDEN_OF_DEATH(Quest.THE_GARDEN_OF_DEATH, 20221130, false),
	SECRETS_OF_THE_NORTH(Quest.SECRETS_OF_THE_NORTH, 20230111, false),
	HIS_FAITHFUL_SERVANTS(Quest.SECRETS_OF_THE_NORTH, 20230614, false);

	@Getter
	private final Quest quest;
	@Getter
	private final int releaseDate;
	@Getter
	@Setter
	private boolean isComplete;

	ByReleaseQuest(Quest quest, int releaseDate, boolean isComplete) {
		this.quest = quest;
		this.releaseDate = releaseDate;
		this.isComplete = isComplete;
	}
}